{"version":3,"file":"onview.amd.js","sources":["../src/ATTRIBUTES.js","../src/READY_STATES.js","../src/utils/addAttributes.js","../src/utils/delayExecutions.js","../src/utils/executeCode.js","../src/utils/overrideProperties.js","../src/utils/removeAttributes.js","../src/utils/removeFromObserving.js","../src/OnView.js"],"sourcesContent":["export default [\n  'data-onview',\n  'data-onview-enter',\n  'data-onview-enter-add',\n  'data-onview-enter-remove',\n  'data-onview-enter-toggle',\n  'data-onview-exit',\n  'data-onview-exit-add',\n  'data-onview-exit-remove',\n  'data-onview-exit-toggle',\n]\n","export default {\n  complete: 'complete',\n  interactive: 'interactive',\n  never: 'never',\n}\n","/**\n * Add id, class, or other attribute using a query selector style query.\n * @param _element\n * @param _selectors\n * @param _splitCharacter\n */\nexport default function (_element, _selectors, _splitCharacter = ',') {\n  let key, value\n  Array.prototype.forEach.call(_selectors.split(_splitCharacter), selector => {\n    // Trim spaces.\n    selector = selector.trim()\n\n    // Base what to do of\n    switch (selector[0]) {\n      case '#':\n        // Remove starting character and replace spaces with dashes.\n        selector = selector.substring(1).replace(' ', '-')\n        // Set id.\n        _element.id = selector\n        break\n      case '.':\n        // Remove starting character and replace spaces with dashes.\n        selector = selector.substring(1).replace(' ', '-')\n        // Add class if not part of classlist.\n        if (!_element.classList.contains(selector)) {\n          _element.classList.add(selector)\n        }\n        break\n      case '[':\n        // Remove brackets, split key and value, replace spaces with dashes in key.\n        key = selector.substring(1, selector.indexOf('='))\n        value = selector.substring(\n          key.length + 2,\n          selector.length - 1\n        )\n        key = key.replace(' ', '-')\n\n        // Set attribute.\n        _element.setAttribute(key, value)\n        break\n    }\n  })\n}\n","\n/**\n * Delay invocation of the method by the amount of delay.\n * @param _functions Functions to invoke after the delay has passed.\n * @param _delayText Interger parsable string with time in milliseconds.\n */\nexport default function (_functions, _delayText) {\n  if (_functions.length <= 0) {\n    return\n  }\n\n  if (!_delayText) {\n    _functions.forEach(_function => {\n      _function()\n    })\n    return\n  }\n\n  const delay = parseInt(_delayText, 10)\n  if (delay <= 0) {\n    _functions.forEach(_function => {\n      _function()\n    })\n    return\n  }\n\n  setTimeout(() => {\n    _functions.forEach(_function => {\n      _function()\n    })\n  }, delay)\n}\n","/**\n * Executes code relatively safely.\n * @param _code\n * @param _contextName\n * @param _context\n */\nexport default function (_code, _context, _contextName = 'context') {\n  return Function('\"use strict\"; return (function(' + _contextName + ') { ' + _code + ' });')()(_context) // eslint-disable-line no-new-func\n}\n","/**\n * Simplified object.assign function.\n * @param _a\n * @param _b\n */\nexport default function (_a, _b) {\n  Object.keys(_b).forEach(function (key) {\n    _a[key] = _b[key]\n  })\n  return _a\n}\n","/**\n * Remove id, class, or other attribute using a query selector style query.\n * @param _element\n * @param _selectors\n * @param _splitCharacter\n */\nexport default function (_element, _selectors, _splitCharacter = ',') {\n  let index, key\n  Array.prototype.forEach.call(_selectors.split(_splitCharacter), selector => {\n    // Trim spaces.\n    selector = selector.trim()\n\n    // Base what to do of\n    switch (selector[0]) {\n      case '#':\n        // Remove starting character and replace spaces with dashes.\n        selector = selector.substring(1).replace(' ', '-')\n        // Remove id attribute.\n        _element.removeAttribute(selector)\n        break\n      case '.':\n        // Remove starting character and replace spaces with dashes.\n        selector = selector.substring(1).replace(' ', '-')\n        // Remove class if part of classlist.\n        if (_element.classList.contains(selector)) {\n          _element.classList.remove(selector)\n        }\n        break\n      case '[':\n        // Remove brackets, split key from value, replace spaces with dashes in key.\n        index = selector.indexOf('=')\n        if (index < 0) {\n          index = selector.length - 1\n        }\n        key = selector.substring(1, index)\n        key = key.replace(' ', '-')\n\n        // Set attribute.\n        _element.removeAttribute(key)\n        break\n    }\n  })\n}\n","import ATTRIBUTES from '../ATTRIBUTES.js'\n\n/**\n * Removes attribute from element and disable observing if no OnView attributes are left.\n * @param _element\n * @param _observer\n * @param _attributeName\n */\nexport default function (_element, _observer, _attributeName) {\n  // If repeat is set then do not remove.\n  if (_element.dataset.onviewRepeat) {\n    return\n  }\n\n  // Remove attribute that got invoked.\n  _element.removeAttribute(_attributeName)\n\n  // Check for other OnView observable attributes, if any left then exit early.\n  if (ATTRIBUTES.filter((attribute) => _element.hasAttribute(attribute)).length > 0) {\n    return\n  }\n\n  // Remove automatically added element.\n  _element.removeAttribute('data-onview-isintersecting')\n  // Remove element from being observed.\n  _observer.unobserve(_element)\n}\n","// Import static variables.\nimport ATTRIBUTES from './ATTRIBUTES.js'\nimport READY_STATES from './READY_STATES.js'\n// Import utils.\nimport addAttributes from './utils/addAttributes.js'\nimport delayExecutions from './utils/delayExecutions.js'\nimport executeCode from './utils/executeCode.js'\nimport overrideProperties from './utils/overrideProperties.js'\nimport removeAttributes from './utils/removeAttributes.js'\nimport removeFromObserving from './utils/removeFromObserving.js'\n\nclass OnView {\n  /**\n   * Construct OnView instance.\n   * @param _options Module options. (See: README.md)\n   */\n  constructor(_options) {\n    this._initialized = false\n\n    // Set default options.\n    this._options = {\n      debug: false,\n      readyState: OnView.READY_STATES.complete,\n\n      observedElement: document.body,\n      observerElement: null,\n      observerMargin: '0px',\n\n      eventContextName: 'detail',\n      selectorSplitCharacter: '?',\n    }\n    // If custom options given then override the defaults.\n    if (_options && _options !== {}) {\n      this._options = overrideProperties(this._options, _options)\n\n      // Log changes to console.\n      if (this._options.debug) {\n        console.log('OnView: overwriting options, new options:', this._options)\n      }\n    }\n\n    // Initialize module.\n    if (this._options.readyState === OnView.READY_STATES.interactive) {\n      if (document.readyState === 'interactive' || document.readyState === 'complete') {\n        // Initialize now.\n        this.initialize()\n      } else {\n        // Wait for DOM interactive, then initialize.\n        document.addEventListener('DOMContentLoaded', () => {\n          this.initialize()\n        })\n      }\n    } else if (this._options.readyState === OnView.READY_STATES.complete) {\n      if (document.readyState === 'complete') {\n        // Initialize now.\n        this.initialize()\n      } else {\n        // Wait for window loaded, then initialize.\n        window.addEventListener('load', () => {\n          this.initialize()\n        })\n      }\n    }\n  }\n\n  /**\n   * Returns clone of current options.\n   */\n  getOptions () {\n    return overrideProperties({}, this._options)\n  }\n\n  /**\n   * Returns whether the instance has been initialized.\n   */\n  isInitialized () {\n    return this._initialized\n  }\n\n  /**\n   * Initialize module instance.\n   */\n  initialize () {\n    // Check if already initialized.\n    if (this._initialized) {\n      if (this._options.debug) {\n        console.warn('OnView: module instance already initialized, therefore re-initialization is ignored.')\n      }\n\n      return\n    }\n    this._initialized = true\n\n    // Setup intersection observer.\n    this._setupObserver()\n    // Query documents for elements to track.\n    this.queryDocument()\n\n    if (this._options.debug) {\n      console.log('OnView: module instance initialized.')\n    }\n  }\n\n  /**\n   * Destroy this instance.\n   */\n  destroy () {\n    // Disable and discard observer.\n    if (this._observer) {\n      this._observer.disconnect()\n    }\n    this._observer = null\n\n    // Set initialization to false.\n    this._initialized = false\n\n    // Reset options.\n    this._options = null\n  }\n\n  /**\n   * Query document for elements to track.\n   */\n  queryDocument () {\n    // Get currently observed elements.\n    const observedElements = this._observer.takeRecords().map((entry) => {\n      return entry.target\n    })\n    // Query document of elements to track.\n    const query = ATTRIBUTES.map((attribute) => {\n      return '[' + attribute + ']'\n    })\n    const elements = this._options.observedElement.querySelectorAll(query.join(','))\n\n    // If queried before.\n    if (observedElements.length > 0) {\n      // Compare previous list of elements to new elements.\n      Array.prototype.forEach.call(elements, (element) => {\n        // Filter elements out that are already being observer.\n        if (observedElements.indexOf(element) >= 0) {\n          return\n        }\n\n        // Add element to observer.\n        this._observer.observe(element)\n      })\n    } else {\n      // Add elements to observer.\n      Array.prototype.forEach.call(elements, (element) => {\n        this._observer.observe(element)\n      })\n    }\n\n    if (this._options.debug) {\n      console.log('OnView: queried document for elements, observered elements: ', elements)\n    }\n  }\n\n  /**\n   * Setup intersection observer.\n   */\n  _setupObserver () {\n    // Ensure there is no previous observer active.\n    if (this._observer) {\n      this._observer.disconnect()\n    }\n\n    // Define observer options.\n    const observerOptions = overrideProperties({\n      threshold: 0,\n    }, {\n      root: this._options.observerElement,\n      rootMargin: this._options.observerMargin,\n    })\n\n    // Create observer instance.\n    this._observer = new IntersectionObserver(this._handleIntersect, observerOptions)\n  }\n\n  /**\n   * Handle intersection events.\n   * @param _entries\n   * @param _observer\n   */\n  _handleIntersect (_entries, _observer) {\n    Array.prototype.forEach.call(_entries, (entry) => {\n      if (this._options.debug) {\n        console.log('OnView: Intersection change triggered for: ', entry)\n      }\n\n      // Get time sensitive reused options.\n      const splitCharacter = this._options.selectorSplitCharacter\n\n      // Get HTML element from entry.\n      const element = entry.target\n\n      // Get whether it has changed.\n      const hasChanged = (element.dataset.onviewIsintersecting === 'true') !== entry.isIntersecting\n      element.dataset.onviewIsintersecting = entry.isIntersecting.toString()\n\n      // Store function that need execution.\n      const functions = []\n\n      // Execute code on view enter and exit.\n      if (element.dataset.onview && element.dataset.onview.length > 0) {\n        const code = element.dataset.onview\n        functions.push(() => executeCode(code, {\n          entry: entry,\n        }, this._options.eventContextName))\n      }\n      if (entry.isIntersecting) {\n        // Execute code on view enter.\n        if (element.dataset.onviewEnter) {\n          const code = element.dataset.onviewEnter\n          functions.push(() => executeCode(code, {\n            entry: entry,\n          }, this._options.eventContextName))\n\n          removeFromObserving(element, _observer, 'data-onview-enter')\n        }\n        // Add attributes on view enter.\n        if (element.dataset.onviewEnterAdd) {\n          const selectors = element.dataset.onviewEnterAdd\n          functions.push(() => addAttributes(element, selectors, splitCharacter))\n\n          removeFromObserving(element, _observer, 'data-onview-enter-add')\n        }\n        // Remove attributes on view enter.\n        if (element.dataset.onviewEnterRemove) {\n          const selectors = element.dataset.onviewEnterRemove\n          functions.push(() => removeAttributes(element, selectors, splitCharacter))\n\n          removeFromObserving(element, _observer, 'data-onview-enter-remove')\n        }\n      }\n      // Add attributes when in view and remove attributes when out of view.\n      if (element.dataset.onviewEnterToggle) {\n        if (entry.isIntersecting) {\n          const selectors = element.dataset.onviewEnterToggle\n          functions.push(() => addAttributes(element, selectors, splitCharacter))\n        } else if (hasChanged) {\n          const selectors = element.dataset.onviewEnterToggle\n          functions.push(() => removeAttributes(element, selectors, splitCharacter))\n        }\n      }\n      if (hasChanged && !entry.isIntersecting) {\n        // Execute code on view exit.\n        if (element.dataset.onviewExit) {\n          const code = element.dataset.onviewExit\n          functions.push(() => executeCode(code, {\n            entry: entry,\n          }, this._options.eventContextName))\n\n          removeFromObserving(element, _observer, 'data-onview-exit')\n        }\n        // Add attributes on view exit.\n        if (element.dataset.onviewExitAdd) {\n          const selectors = element.dataset.onviewExitAdd\n          functions.push(() => addAttributes(element, selectors, splitCharacter))\n\n          removeFromObserving(element, _observer, 'data-onview-exit-add')\n        }\n        // Remove attributes on view exit.\n        if (element.dataset.onviewExitRemove) {\n          const selectors = element.dataset.onviewExitRemove\n          functions.push(() => removeAttributes(element, selectors, splitCharacter))\n\n          removeFromObserving(element, _observer, 'data-onview-exit-remove')\n        }\n      }\n      // Remove attributes when in view and add attributes when out of view.\n      if (element.dataset.onviewExitToggle) {\n        if (entry.isIntersecting) {\n          const selectors = element.dataset.onviewExitToggle\n          functions.push(() => removeAttributes(element, selectors, splitCharacter))\n        } else if (hasChanged) {\n          const selectors = element.dataset.onviewExitToggle\n          functions.push(() => addAttributes(element, selectors, splitCharacter))\n        }\n      }\n\n      // Execute functions with optional delay.\n      delayExecutions(functions, element.dataset.onviewDelay)\n\n      if (typeof (window.CustomEvent) === 'function') {\n        // Dispatch custom event.\n        element.dispatchEvent(new CustomEvent('onview-change', {\n          detail: {\n            entry: entry,\n          },\n        }))\n      }\n    })\n  };\n}\n\n// Set pulbic static variables.\nOnView.READY_STATES = READY_STATES\n\n// Export module class.\nexport default OnView\n"],"names":["complete","interactive","never","_element","_selectors","_splitCharacter","key","value","Array","prototype","forEach","call","split","selector","trim","substring","replace","id","classList","contains","add","indexOf","length","setAttribute","_functions","_delayText","_function","delay","parseInt","setTimeout","_code","_context","_contextName","Function","_a","_b","Object","keys","index","removeAttribute","remove","_observer","_attributeName","dataset","onviewRepeat","ATTRIBUTES","filter","attribute","hasAttribute","unobserve","OnView","_options","_initialized","debug","readyState","READY_STATES","observedElement","document","body","observerElement","observerMargin","eventContextName","selectorSplitCharacter","overrideProperties","console","log","initialize","addEventListener","window","warn","_setupObserver","queryDocument","disconnect","observedElements","takeRecords","map","entry","target","query","elements","querySelectorAll","join","element","observe","observerOptions","threshold","root","rootMargin","IntersectionObserver","_handleIntersect","_entries","splitCharacter","hasChanged","onviewIsintersecting","isIntersecting","toString","functions","onview","code","push","executeCode","onviewEnter","removeFromObserving","onviewEnterAdd","selectors","addAttributes","onviewEnterRemove","removeAttributes","onviewEnterToggle","onviewExit","onviewExitAdd","onviewExitRemove","onviewExitToggle","delayExecutions","onviewDelay","CustomEvent","dispatchEvent","detail"],"mappings":"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"}