{"version":3,"file":"onview.esm.js","sources":["../src/ATTRIBUTES.js","../src/READY_STATES.js","../src/utils/addAttributes.js","../src/utils/delayExecutions.js","../src/utils/executeCode.js","../src/utils/removeAttributes.js","../src/utils/removeFromObserving.js","../src/utils/handleIntersection.js","../src/utils/setupObserver.js","../src/OnView.js"],"sourcesContent":["export default [\n  'data-onview',\n  'data-onview-enter',\n  'data-onview-enter-add',\n  'data-onview-enter-remove',\n  'data-onview-enter-toggle',\n  'data-onview-exit',\n  'data-onview-exit-add',\n  'data-onview-exit-remove',\n  'data-onview-exit-toggle',\n]\n","export default {\n  complete: 'complete',\n  interactive: 'interactive',\n  never: 'never',\n}\n","/**\n * Add id, class, or other attribute using a query selector style query.\n * @param {HTMLElement} element Element to add the attributes to.\n * @param {String} selectors All selectors as single string.\n * @param {String} splitCharacter Character indicating next selector. Default is ','.\n */\nexport default function (element, selectors, splitCharacter = ',') {\n  let key, value\n  Array.prototype.forEach.call(selectors.split(splitCharacter), selector => {\n    // Trim spaces.\n    selector = selector.trim()\n\n    // Base what to do of\n    switch (selector[0]) {\n      case '#':\n        // Remove starting character and replace spaces with dashes.\n        selector = selector.substring(1).replace(' ', '-')\n        // Set id.\n        element.id = selector\n        break\n      case '.':\n        // Remove starting character and replace spaces with dashes.\n        selector = selector.substring(1).replace(' ', '-')\n        // Add class if not part of classlist.\n        if (!element.classList.contains(selector)) {\n          element.classList.add(selector)\n        }\n        break\n      case '[':\n        // Remove brackets, split key and value, replace spaces with dashes in key.\n        key = selector.substring(1, selector.indexOf('='))\n        value = selector.substring(\n          key.length + 2,\n          selector.length - 1\n        )\n        key = key.replace(' ', '-')\n\n        // Set attribute.\n        element.setAttribute(key, value)\n        break\n    }\n  })\n}\n","/**\n * Delay invocation of the method by the amount of delay.\n * @param {Array<Function>} functions Functions to invoke after the delay has passed.\n * @param {String} delayText Interger parsable string with time in milliseconds. Default is null.\n */\nexport default function (functions, delayText = null) {\n  if (functions.length <= 0) {\n    return\n  }\n\n  if (!delayText) {\n    functions.forEach(_function => {\n      _function()\n    })\n    return\n  }\n\n  const delay = parseInt(delayText, 10)\n  if (delay <= 0) {\n    functions.forEach(_function => {\n      _function()\n    })\n    return\n  }\n\n  setTimeout(() => {\n    functions.forEach(_function => {\n      _function()\n    })\n  }, delay)\n}\n","/**\n * Executes code relatively safely.\n * @param {String} code Code to execute.\n * @param {any} context Context variable of the code.\n * @param {String} contextName Name of context variable. Default is 'context'.\n * @returns {Any} Returns the return of code.\n */\nexport default function (code, context, contextName = 'context') {\n  return Function('\"use strict\"; return (function(' + contextName + ') { ' + code + ' });')()(context) // eslint-disable-line no-new-func\n}\n","/**\n * Remove id, class, or other attribute using a query selector style query.\n * @param {HTMLElement} element Element to remove the attributes from.\n * @param {String} selectors All selectors as single string.\n * @param {String} splitCharacter Character indicating next selector. Default is ','.\n */\nexport default function (element, selectors, splitCharacter = ',') {\n  let index, key\n  Array.prototype.forEach.call(selectors.split(splitCharacter), selector => {\n    // Trim spaces.\n    selector = selector.trim()\n\n    // Base what to do of\n    switch (selector[0]) {\n      case '#':\n        // Remove starting character and replace spaces with dashes.\n        selector = selector.substring(1).replace(' ', '-')\n        // Remove id attribute.\n        element.removeAttribute(selector)\n        break\n      case '.':\n        // Remove starting character and replace spaces with dashes.\n        selector = selector.substring(1).replace(' ', '-')\n        // Remove class if part of classlist.\n        if (element.classList.contains(selector)) {\n          element.classList.remove(selector)\n        }\n        break\n      case '[':\n        // Remove brackets, split key from value, replace spaces with dashes in key.\n        index = selector.indexOf('=')\n        if (index < 0) {\n          index = selector.length - 1\n        }\n        key = selector.substring(1, index)\n        key = key.replace(' ', '-')\n\n        // Set attribute.\n        element.removeAttribute(key)\n        break\n    }\n  })\n}\n","import ATTRIBUTES from '../ATTRIBUTES.js'\n\n/**\n * Removes attribute from element and disable observing if no OnView attributes are left.\n * @param {HTMLElement} element Element to stop observer.\n * @param {IntersectionObserver} observer Observer observing the element.\n * @param {String} attributeName Name of the attribute to remove.\n */\nexport default function (element, observer, attributeName) {\n  // If repeat is set then do not remove.\n  if (element.dataset.onviewRepeat) {\n    return\n  }\n\n  // Remove attribute that got invoked.\n  element.removeAttribute(attributeName)\n\n  // Check for other OnView observable attributes, if any left then exit early.\n  if (ATTRIBUTES.filter((attribute) => element.hasAttribute(attribute)).length > 0) {\n    return\n  }\n\n  // Remove automatically added element.\n  element.removeAttribute('data-onview-isintersecting')\n  // Remove element from being observed.\n  observer.unobserve(element)\n}\n","// Import utils.\nimport addAttributes from './addAttributes.js'\nimport delayExecutions from './delayExecutions.js'\nimport executeCode from './executeCode.js'\nimport removeAttributes from './removeAttributes.js'\nimport removeFromObserving from './removeFromObserving.js'\n\n/**\n * Handle intersection events.\n * @param {OnView} onView OnView instance.\n * @param {Array} entries Observerd elements.\n * @param {IntersectionObserver} observer Intersection observer.\n */\nexport default function (onView, entries, observer) {\n  entries.forEach(entry => {\n    if (onView._options.debug) {\n      console.log('OnView: Intersection change triggered for: ', entry)\n    }\n\n    // Get time sensitive reused options.\n    const splitCharacter = onView._options.selectorSplitCharacter\n\n    // Get HTML element from entry.\n    const element = entry.target\n\n    // Get whether it has changed.\n    const hasChanged = (element.dataset.onviewIsintersecting === 'true') !== entry.isIntersecting\n    element.dataset.onviewIsintersecting = entry.isIntersecting.toString()\n\n    // Store function that need execution.\n    const functions = []\n\n    // Execute code on view enter and exit.\n    if (element.dataset.onview && element.dataset.onview.length > 0) {\n      const code = element.dataset.onview\n      functions.push(() => executeCode(code, {\n        entry: entry,\n      }, onView._options.eventContextName))\n    }\n    if (entry.isIntersecting) {\n      // Execute code on view enter.\n      if (element.dataset.onviewEnter) {\n        const code = element.dataset.onviewEnter\n        functions.push(() => executeCode(code, {\n          entry: entry,\n        }, onView._options.eventContextName))\n\n        removeFromObserving(element, observer, 'data-onview-enter')\n      }\n      // Add attributes on view enter.\n      if (element.dataset.onviewEnterAdd) {\n        const selectors = element.dataset.onviewEnterAdd\n        functions.push(() => addAttributes(element, selectors, splitCharacter))\n\n        removeFromObserving(element, observer, 'data-onview-enter-add')\n      }\n      // Remove attributes on view enter.\n      if (element.dataset.onviewEnterRemove) {\n        const selectors = element.dataset.onviewEnterRemove\n        functions.push(() => removeAttributes(element, selectors, splitCharacter))\n\n        removeFromObserving(element, observer, 'data-onview-enter-remove')\n      }\n    }\n    // Add attributes when in view and remove attributes when out of view.\n    if (element.dataset.onviewEnterToggle) {\n      if (entry.isIntersecting) {\n        const selectors = element.dataset.onviewEnterToggle\n        functions.push(() => addAttributes(element, selectors, splitCharacter))\n      } else if (hasChanged) {\n        const selectors = element.dataset.onviewEnterToggle\n        functions.push(() => removeAttributes(element, selectors, splitCharacter))\n      }\n    }\n    if (hasChanged && !entry.isIntersecting) {\n      // Execute code on view exit.\n      if (element.dataset.onviewExit) {\n        const code = element.dataset.onviewExit\n        functions.push(() => executeCode(code, {\n          entry: entry,\n        }, onView._options.eventContextName))\n\n        removeFromObserving(element, observer, 'data-onview-exit')\n      }\n      // Add attributes on view exit.\n      if (element.dataset.onviewExitAdd) {\n        const selectors = element.dataset.onviewExitAdd\n        functions.push(() => addAttributes(element, selectors, splitCharacter))\n\n        removeFromObserving(element, observer, 'data-onview-exit-add')\n      }\n      // Remove attributes on view exit.\n      if (element.dataset.onviewExitRemove) {\n        const selectors = element.dataset.onviewExitRemove\n        functions.push(() => removeAttributes(element, selectors, splitCharacter))\n\n        removeFromObserving(element, observer, 'data-onview-exit-remove')\n      }\n    }\n    // Remove attributes when in view and add attributes when out of view.\n    if (element.dataset.onviewExitToggle) {\n      if (entry.isIntersecting) {\n        const selectors = element.dataset.onviewExitToggle\n        functions.push(() => removeAttributes(element, selectors, splitCharacter))\n      } else if (hasChanged) {\n        const selectors = element.dataset.onviewExitToggle\n        functions.push(() => addAttributes(element, selectors, splitCharacter))\n      }\n    }\n\n    // Execute functions with optional delay.\n    delayExecutions(functions, element.dataset.onviewDelay)\n\n    if (typeof (window.CustomEvent) === 'function') {\n      // Dispatch custom event.\n      element.dispatchEvent(new CustomEvent('onview-change', {\n        detail: {\n          entry: entry,\n        },\n      }))\n    }\n  })\n}\n","// Import utils.\nimport handleIntersection from './handleIntersection.js'\n\n/**\n * Sets up intersection observer.\n * @param {OnView} OnView instance.\n */\nexport default function (onView) {\n  // Ensure there is no previous observer active.\n  if (onView._observer) {\n    onView._observer.disconnect()\n  }\n\n  // Define observer options.\n  const observerOptions = Object.assign({\n    threshold: 0,\n  }, {\n    root: onView._options.observerElement,\n    rootMargin: onView._options.observerMargin,\n  })\n\n  // Create observer instance.\n  onView._observer = new IntersectionObserver(function (_entries, _observer) {\n    handleIntersection(onView, _entries, _observer)\n  }, observerOptions)\n}\n","// Import static variables.\nimport ATTRIBUTES from './ATTRIBUTES.js'\nimport READY_STATES from './READY_STATES.js'\n// Import utils.\nimport setupObserver from './utils/setupObserver.js'\n\nclass OnView {\n  /**\n   * Construct OnView instance.\n   * @param {Object} options Module options. (See: README.md)\n   * @returns {Object} OnView instance.\n   */\n  constructor(options) {\n    this._initialized = false\n\n    // Set default options.\n    this._options = {\n      debug: false,\n      readyState: READY_STATES.complete,\n\n      observedElement: document.body,\n      observerElement: null,\n      observerMargin: '0px',\n\n      eventContextName: 'detail',\n      selectorSplitCharacter: '?',\n    }\n    // If custom options given then override the defaults.\n    if (options && options !== {}) {\n      this._options = Object.assign(this._options, options)\n\n      // Log changes to console.\n      if (this._options.debug) {\n        console.log('OnView: overwriting options, new options:', this._options)\n      }\n    }\n\n    // Initialize module.\n    if (this._options.readyState === READY_STATES.interactive) {\n      if (document.readyState === 'interactive' || document.readyState === 'complete') {\n        // Initialize now.\n        this.initialize()\n      } else {\n        // Wait for DOM interactive, then initialize.\n        document.addEventListener('DOMContentLoaded', () => {\n          this.initialize()\n        })\n      }\n    } else if (this._options.readyState === READY_STATES.complete) {\n      if (document.readyState === 'complete') {\n        // Initialize now.\n        this.initialize()\n      } else {\n        // Wait for window loaded, then initialize.\n        window.addEventListener('load', () => {\n          this.initialize()\n        })\n      }\n    }\n  }\n\n  /**\n   * Returns clone of current options.\n   * @returns {Object} Current options.\n   */\n  getOptions () {\n    return Object.assign({}, this._options)\n  }\n\n  /**\n   * Returns whether the instance has been initialized.\n   * @returns {Boolean} Whether the instance has been initialized\n   */\n  isInitialized () {\n    return this._initialized\n  }\n\n  /**\n   * Initialize module instance.\n   */\n  initialize () {\n    // Check if already initialized.\n    if (this._initialized) {\n      if (this._options.debug) {\n        console.warn('OnView: module instance already initialized, therefore re-initialization is ignored.')\n      }\n\n      return\n    }\n    this._initialized = true\n\n    // Setup intersection observer.\n    setupObserver(this)\n    // Query documents for elements to track.\n    this.queryDocument()\n\n    if (this._options.debug) {\n      console.log('OnView: module instance initialized.')\n    }\n  }\n\n  /**\n   * Destroy this instance.\n   */\n  destroy () {\n    // Disable and discard observer.\n    if (this._observer) {\n      this._observer.disconnect()\n    }\n    this._observer = null\n\n    // Set initialization to false.\n    this._initialized = false\n\n    // Reset options.\n    this._options = null\n  }\n\n  /**\n   * Query document for elements to track.\n   */\n  queryDocument () {\n    // Get currently observed elements.\n    const observedElements = this._observer.takeRecords().map((entry) => {\n      return entry.target\n    })\n    // Query document of elements to track.\n    const query = ATTRIBUTES.map((attribute) => {\n      return '[' + attribute + ']'\n    })\n    const elements = this._options.observedElement.querySelectorAll(query.join(','))\n\n    // If queried before.\n    if (observedElements.length > 0) {\n      // Compare previous list of elements to new elements.\n      Array.prototype.forEach.call(elements, (element) => {\n        // Filter elements out that are already being observer.\n        if (observedElements.indexOf(element) >= 0) {\n          return\n        }\n\n        // Add element to observer.\n        this._observer.observe(element)\n      })\n    } else {\n      // Add elements to observer.\n      Array.prototype.forEach.call(elements, (element) => {\n        this._observer.observe(element)\n      })\n    }\n\n    if (this._options.debug) {\n      console.log('OnView: queried document for elements, observered elements: ', elements)\n    }\n  }\n}\n\n// Set pulbic static variables.\nOnView.READY_STATES = READY_STATES\n\n// Export module class.\nexport default OnView\n"],"names":["complete","interactive","never","element","selectors","splitCharacter","key","value","Array","prototype","forEach","call","split","selector","trim","substring","replace","id","classList","contains","add","indexOf","length","setAttribute","functions","delayText","_function","delay","parseInt","setTimeout","code","context","contextName","Function","index","removeAttribute","remove","observer","attributeName","dataset","onviewRepeat","ATTRIBUTES","filter","attribute","hasAttribute","unobserve","onView","entries","entry","_options","debug","console","log","selectorSplitCharacter","target","hasChanged","onviewIsintersecting","isIntersecting","toString","onview","push","executeCode","eventContextName","onviewEnter","removeFromObserving","onviewEnterAdd","addAttributes","onviewEnterRemove","removeAttributes","onviewEnterToggle","onviewExit","onviewExitAdd","onviewExitRemove","onviewExitToggle","delayExecutions","onviewDelay","window","CustomEvent","dispatchEvent","detail","_observer","disconnect","observerOptions","Object","assign","threshold","root","observerElement","rootMargin","observerMargin","IntersectionObserver","_entries","handleIntersection","OnView","options","_initialized","readyState","READY_STATES","observedElement","document","body","initialize","addEventListener","warn","setupObserver","queryDocument","observedElements","takeRecords","map","query","elements","querySelectorAll","join","observe"],"mappings":"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"}