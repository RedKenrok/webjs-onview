{"version":3,"file":"onview.esm.js","sources":["../src/ATTRIBUTES.js","../src/addAttributes.js","../src/delayExecutions.js","../src/executeCode.js","../src/removeAttributes.js","../src/removeFromObserving.js","../src/handleIntersection.js","../src/OnView.js"],"sourcesContent":["export default [\n  '',\n  '-enter',\n  '-enter-add',\n  '-enter-remove',\n  '-enter-toggle',\n  '-exit',\n  '-exit-add',\n  '-exit-remove',\n  '-exit-toggle',\n]\n","/**\n * Add id, class, or other attribute using a query selector style query.\n * @param {HTMLElement} element Element to add the attributes to.\n * @param {String} selectors All selectors as single string.\n * @param {String} splitCharacter Character indicating next selector. Default is ','.\n */\nexport default function (element, selectors, splitCharacter = ',') {\n  let key, value\n  Array.prototype.forEach.call(selectors.split(splitCharacter), selector => {\n    // Trim spaces.\n    selector = selector.trim()\n\n    // Base what to do of\n    switch (selector[0]) {\n      case '#':\n        // Remove starting character and replace spaces with dashes.\n        selector = selector.substring(1).replace(' ', '-')\n        // Set id.\n        element.id = selector\n        break\n\n      case '.':\n        // Remove starting character and replace spaces with dashes.\n        selector = selector.substring(1).replace(' ', '-')\n        // Add class if not part of classlist.\n        if (!element.classList.contains(selector)) {\n          element.classList.add(selector)\n        }\n        break\n\n      case '[':\n        // Remove brackets, split key and value, replace spaces with dashes in key.\n        key = selector.substring(1, selector.indexOf('='))\n        value = selector.substring(\n          key.length + 2,\n          selector.length - 1\n        )\n        key = key.replace(' ', '-')\n\n        // Set attribute.\n        element.setAttribute(key, value)\n        break\n    }\n  })\n}\n","/**\n * Delay invocation of the method by the amount of delay.\n * @param {Array<Function>} functions Functions to invoke after the delay has passed.\n * @param {String} delayText Interger parsable string with time in milliseconds. Default is null.\n */\nexport default function (functions, delayText = null) {\n  if (functions.length <= 0) {\n    return\n  }\n\n  if (!delayText) {\n    functions.forEach(_function => {\n      _function()\n    })\n    return\n  }\n\n  const delay = parseInt(delayText, 10)\n  if (delay <= 0) {\n    functions.forEach(_function => {\n      _function()\n    })\n    return\n  }\n\n  setTimeout(() => {\n    functions.forEach(_function => {\n      _function()\n    })\n  }, delay)\n}\n","/**\n * Executes code relatively safely.\n * @param {String} code Code to execute.\n * @param {any} context Context variable of the code.\n * @param {String} contextName Name of context variable. Default is 'context'.\n * @returns {Any} Returns the return of code.\n */\nexport default function (code, context, contextName = 'context') {\n  return Function('\"use strict\"; return (function(' + contextName + ') { ' + code + ' });')()(context) // eslint-disable-line no-new-func\n}\n","/**\n * Remove id, class, or other attribute using a query selector style query.\n * @param {HTMLElement} element Element to remove the attributes from.\n * @param {String} selectors All selectors as single string.\n * @param {String} splitCharacter Character indicating next selector. Default is ','.\n */\nexport default function (element, selectors, splitCharacter = ',') {\n  let index, key\n  Array.prototype.forEach.call(selectors.split(splitCharacter), selector => {\n    // Trim spaces.\n    selector = selector.trim()\n\n    // Base what to do of\n    switch (selector[0]) {\n      case '#':\n        // Remove starting character and replace spaces with dashes.\n        selector = selector.substring(1).replace(' ', '-')\n        // Remove id attribute.\n        element.removeAttribute(selector)\n        break\n      case '.':\n        // Remove starting character and replace spaces with dashes.\n        selector = selector.substring(1).replace(' ', '-')\n        // Remove class if part of classlist.\n        if (element.classList.contains(selector)) {\n          element.classList.remove(selector)\n        }\n        break\n      case '[':\n        // Remove brackets, split key from value, replace spaces with dashes in key.\n        index = selector.indexOf('=')\n        if (index < 0) {\n          index = selector.length - 1\n        }\n        key = selector.substring(1, index)\n        key = key.replace(' ', '-')\n\n        // Set attribute.\n        element.removeAttribute(key)\n        break\n    }\n  })\n}\n","import ATTRIBUTES from './ATTRIBUTES.js'\n\n/**\n * Removes attribute from element and disable observing if no OnView attributes are left.\n * @param {OnView} onView OnView instance.\n * @param {HTMLElement} element Element to stop observer.\n * @param {IntersectionObserver} observer Observer observing the element.\n * @param {String} attributeName Name of the attribute to remove.\n */\nexport default function (onView, element, observer, attributeName) {\n  // If repeat is set then do not remove.\n  if (element.getAttribute(onView._options.attributePrefix + '-repeat') !== 'false') {\n    return\n  }\n\n  // Remove attribute that got invoked.\n  element.removeAttribute(attributeName)\n\n  // Check for other OnView observable attributes, if any left then exit early.\n  if (ATTRIBUTES.filter((attribute) => element.hasAttribute(onView._options.attributePrefix + attribute)).length > 0) {\n    return\n  }\n\n  // Remove automatically added element.\n  element.removeAttribute('data-onview-isintersecting')\n  // Remove element from being observed.\n  observer.unobserve(element)\n}\n","// Import utils.\nimport addAttributes from './addAttributes.js'\nimport delayExecutions from './delayExecutions.js'\nimport executeCode from './executeCode.js'\nimport removeAttributes from './removeAttributes.js'\nimport removeFromObserving from './removeFromObserving.js'\n\n/**\n * Handle intersection events.\n * @param {OnView} onView OnView instance.\n * @param {Array} entries Observed elements.\n * @param {IntersectionObserver} observer Intersection observer.\n */\nexport default function (onView, entries, observer) {\n  entries.forEach(entry => {\n    if (process.env.NODE_ENV !== 'production') {\n      console.log('OnView: Intersection change triggered for: ', entry)\n    }\n\n    // Get options.\n    const { attributePrefix, eventContextName, splitCharacter } = onView._options\n\n    // Get HTML element from entry.\n    const element = entry.target\n\n    // Get whether it has changed.\n    const hasChanged = (element.getAttribute(attributePrefix + 'isintersecting') !== 'false') !== entry.isIntersecting\n    element.setAttribute(attributePrefix + 'isintersecting', entry.isIntersecting.toString())\n\n    // Store function that need execution.\n    const functions = []\n    let attribute, value\n\n    // Execute code on view enter and exit.\n    value = element.getAttribute(attributePrefix)\n    if (value && value.length > 0) {\n      const code = value\n      functions.push(() => executeCode(code, { entry: entry }, eventContextName))\n    }\n    if (entry.isIntersecting) {\n      // Execute code on view enter.\n      attribute = attributePrefix + '-enter'\n      value = element.getAttribute(attribute)\n      if (value) {\n        const code = value\n        functions.push(() => executeCode(code, { entry: entry }, eventContextName))\n        removeFromObserving(onView, element, observer, attribute)\n      }\n      // Add attributes on view enter.\n      attribute = attributePrefix + '-enter-add'\n      value = element.getAttribute(attribute)\n      if (value) {\n        const selectors = value\n        functions.push(() => addAttributes(element, selectors, splitCharacter))\n        removeFromObserving(onView, element, observer, attribute)\n      }\n      // Remove attributes on view enter.\n      attribute = attributePrefix + '-enter-remove'\n      value = element.getAttribute(attribute)\n      if (value) {\n        const selectors = value\n        functions.push(() => removeAttributes(element, selectors, splitCharacter))\n        removeFromObserving(onView, element, observer, attribute)\n      }\n    }\n\n    // Add attributes when in view and remove attributes when out of view.\n    attribute = attributePrefix + '-enter-toggle'\n    value = element.getAttribute(attribute)\n    if (value) {\n      if (entry.isIntersecting) {\n        const selectors = value\n        functions.push(() => addAttributes(element, selectors, splitCharacter))\n      } else if (hasChanged) {\n        const selectors = value\n        functions.push(() => removeAttributes(element, selectors, splitCharacter))\n      }\n    }\n\n    if (hasChanged && !entry.isIntersecting) {\n      // Execute code on view exit.\n      attribute = attributePrefix + '-exit'\n      value = element.getAttribute(attribute)\n      if (value) {\n        const code = value\n        functions.push(() => executeCode(code, { entry: entry }, eventContextName))\n        removeFromObserving(onView, element, observer, attribute)\n      }\n      // Add attributes on view exit.\n      attribute = attributePrefix + '-exit-add'\n      value = element.getAttribute(attribute)\n      if (value) {\n        const selectors = value\n        functions.push(() => addAttributes(element, selectors, splitCharacter))\n        removeFromObserving(onView, element, observer, attribute)\n      }\n      // Remove attributes on view exit.\n      attribute = attributePrefix + '-exit-remove'\n      value = element.getAttribute(attribute)\n      if (value) {\n        const selectors = value\n        functions.push(() => removeAttributes(element, selectors, splitCharacter))\n        removeFromObserving(onView, element, observer, attribute)\n      }\n    }\n\n    // Remove attributes when in view and add attributes when out of view.\n    attribute = attributePrefix + '-exit-toggle'\n    value = element.getAttribute(attribute)\n    if (value) {\n      if (entry.isIntersecting) {\n        const selectors = value\n        functions.push(() => removeAttributes(element, selectors, splitCharacter))\n      } else if (hasChanged) {\n        const selectors = value\n        functions.push(() => addAttributes(element, selectors, splitCharacter))\n      }\n    }\n\n    // Execute functions with optional delay.\n    delayExecutions(functions, element.getAttribute(attributePrefix + '-delay'))\n\n    if (typeof (window.CustomEvent) === 'function') {\n      // Dispatch custom event.\n      element.dispatchEvent(new CustomEvent('onview-change', { detail: { entry: entry } }))\n    }\n  })\n}\n","// Import constants.\nimport ATTRIBUTES from './ATTRIBUTES.js'\n// Import utils.\nimport handleIntersection from './handleIntersection.js'\n\nconst READY_STATES = {\n  complete: 'complete',\n  interactive: 'interactive',\n  never: 'never',\n}\n\nclass OnView {\n  /**\n   * Construct OnView instance.\n   * @param {Object} options Module options. (See: README.md)\n   * @returns {Object} OnView instance.\n   */\n  constructor(options) {\n    this._initialized = false\n\n    // Set default options.\n    this._options = {\n      debug: false,\n      readyState: READY_STATES.complete,\n\n      observedElement: document.body,\n      observerElement: null,\n      observerMargin: '0px',\n\n      attributePrefix: 'data-onview',\n      eventContextName: 'detail',\n      selectorSplitCharacter: ',',\n    }\n    // If custom options given then override the defaults.\n    if (options && options !== {}) {\n      this._options = Object.assign(this._options, options)\n\n      // Log changes to console.\n      if (process.env.NODE_ENV !== 'production') {\n        console.log('OnView: overwriting options, new options:', this._options)\n      }\n    }\n\n    // Initialize module.\n    if (this._options.readyState === READY_STATES.interactive) {\n      if (document.readyState === 'interactive' || document.readyState === 'complete') {\n        // Initialize now.\n        this.initialize()\n      } else {\n        // Wait for DOM interactive, then initialize.\n        document.addEventListener('DOMContentLoaded', () => {\n          this.initialize()\n        })\n      }\n    } else if (this._options.readyState === READY_STATES.complete) {\n      if (document.readyState === 'complete') {\n        // Initialize now.\n        this.initialize()\n      } else {\n        // Wait for window loaded, then initialize.\n        window.addEventListener('load', () => {\n          this.initialize()\n        })\n      }\n    }\n  }\n\n  /**\n   * Returns clone of current options.\n   * @returns {Object} Current options.\n   */\n  getOptions () {\n    return Object.assign({}, this._options)\n  }\n\n  /**\n   * Returns whether the instance has been initialized.\n   * @returns {Boolean} Whether the instance has been initialized\n   */\n  isInitialized () {\n    return this._initialized\n  }\n\n  /**\n   * Initialize module instance.\n   */\n  initialize () {\n    // Check if already initialized.\n    if (this._initialized) {\n      if (process.env.NODE_ENV !== 'production') {\n        console.warn('OnView: module instance already initialized, therefore re-initialization is ignored.')\n      }\n\n      return\n    }\n    this._initialized = true\n\n    // Define observer options.\n    const observerOptions = Object.assign({\n      threshold: 0,\n    }, {\n      root: this._options.observerElement,\n      rootMargin: this._options.observerMargin,\n    })\n\n    // Create observer instance.\n    this._observer = new IntersectionObserver((_entries, _observer) => {\n      handleIntersection(this, _entries, _observer)\n    }, observerOptions)\n\n    // Query documents for elements to track.\n    this.queryDocument()\n\n    if (process.env.NODE_ENV !== 'production') {\n      console.log('OnView: module instance initialized.')\n    }\n  }\n\n  /**\n   * Destroy this instance.\n   */\n  destroy () {\n    // Disable and discard observer.\n    if (this._observer) {\n      this._observer.disconnect()\n    }\n    this._observer = null\n\n    // Set initialization to false.\n    this._initialized = false\n\n    // Reset options.\n    this._options = null\n  }\n\n  /**\n   * Query document for elements to track.\n   */\n  queryDocument () {\n    // Get currently observed elements.\n    const observedElements = this._observer.takeRecords().map((entry) => {\n      return entry.target\n    })\n    // Query document of elements to track.\n    const queries = ATTRIBUTES.map((attribute) => {\n      return '[' + this._options.attributePrefix + attribute + ']'\n    })\n    const elements = this._options.observedElement.querySelectorAll(queries.join(','))\n\n    // If queried before.\n    if (observedElements.length > 0) {\n      // Compare previous list of elements to new elements.\n      Array.prototype.forEach.call(elements, (element) => {\n        // Filter elements out that are already being observer.\n        if (observedElements.indexOf(element) >= 0) {\n          return\n        }\n\n        // Add element to observer.\n        this._observer.observe(element)\n      })\n    } else {\n      // Add elements to observer.\n      Array.prototype.forEach.call(elements, (element) => {\n        this._observer.observe(element)\n      })\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      console.log('OnView: queried document for elements, observered elements: ', elements)\n    }\n  }\n}\n\n// Set public static variables.\nOnView.READY_STATES = READY_STATES\nOnView.VERSION = process.env.PKG_VERSION\n\n// Export module class.\nexport default OnView\n"],"names":["element","selectors","splitCharacter","key","value","Array","prototype","forEach","call","split","selector","trim","substring","replace","id","classList","contains","add","indexOf","length","setAttribute","functions","delayText","_function","delay","parseInt","setTimeout","code","context","contextName","Function","index","removeAttribute","remove","onView","observer","attributeName","getAttribute","_options","attributePrefix","ATTRIBUTES","filter","attribute","hasAttribute","unobserve","entries","entry","eventContextName","target","hasChanged","isIntersecting","toString","push","executeCode","removeFromObserving","addAttributes","removeAttributes","delayExecutions","window","CustomEvent","dispatchEvent","detail","READY_STATES","complete","interactive","never","OnView","options","_initialized","debug","readyState","observedElement","document","body","observerElement","observerMargin","selectorSplitCharacter","Object","assign","initialize","addEventListener","observerOptions","threshold","root","rootMargin","_observer","IntersectionObserver","_entries","handleIntersection","queryDocument","disconnect","observedElements","takeRecords","map","queries","elements","querySelectorAll","join","observe","VERSION"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA,iBAAe,CACb,EADa,EAEb,QAFa,EAGb,YAHa,EAIb,eAJa,EAKb,eALa,EAMb,OANa,EAOb,WAPa,EAQb,cARa,EASb,cATa,CAAf;;ACAA;AACA;AACA;AACA;AACA;AACA;AACe,wBAAUA,OAAV,EAAmBC,SAAnB,EAAoD;AAAA,MAAtBC,cAAsB,uEAAL,GAAK;AACjE,MAAIC,GAAJ,EAASC,KAAT;AACAC,EAAAA,KAAK,CAACC,SAAN,CAAgBC,OAAhB,CAAwBC,IAAxB,CAA6BP,SAAS,CAACQ,KAAV,CAAgBP,cAAhB,CAA7B,EAA8D,UAAAQ,QAAQ,EAAI;AACxE;AACAA,IAAAA,QAAQ,GAAGA,QAAQ,CAACC,IAAT,EAAX,CAFwE;;AAKxE,YAAQD,QAAQ,CAAC,CAAD,CAAhB;AACE,WAAK,GAAL;AACE;AACAA,QAAAA,QAAQ,GAAGA,QAAQ,CAACE,SAAT,CAAmB,CAAnB,EAAsBC,OAAtB,CAA8B,GAA9B,EAAmC,GAAnC,CAAX,CAFF;;AAIEb,QAAAA,OAAO,CAACc,EAAR,GAAaJ,QAAb;AACA;;AAEF,WAAK,GAAL;AACE;AACAA,QAAAA,QAAQ,GAAGA,QAAQ,CAACE,SAAT,CAAmB,CAAnB,EAAsBC,OAAtB,CAA8B,GAA9B,EAAmC,GAAnC,CAAX,CAFF;;AAIE,YAAI,CAACb,OAAO,CAACe,SAAR,CAAkBC,QAAlB,CAA2BN,QAA3B,CAAL,EAA2C;AACzCV,UAAAA,OAAO,CAACe,SAAR,CAAkBE,GAAlB,CAAsBP,QAAtB;AACD;;AACD;;AAEF,WAAK,GAAL;AACE;AACAP,QAAAA,GAAG,GAAGO,QAAQ,CAACE,SAAT,CAAmB,CAAnB,EAAsBF,QAAQ,CAACQ,OAAT,CAAiB,GAAjB,CAAtB,CAAN;AACAd,QAAAA,KAAK,GAAGM,QAAQ,CAACE,SAAT,CACNT,GAAG,CAACgB,MAAJ,GAAa,CADP,EAENT,QAAQ,CAACS,MAAT,GAAkB,CAFZ,CAAR;AAIAhB,QAAAA,GAAG,GAAGA,GAAG,CAACU,OAAJ,CAAY,GAAZ,EAAiB,GAAjB,CAAN,CAPF;;AAUEb,QAAAA,OAAO,CAACoB,YAAR,CAAqBjB,GAArB,EAA0BC,KAA1B;AACA;AA5BJ;AA8BD,GAnCD;AAoCD;;AC5CD;AACA;AACA;AACA;AACA;AACe,0BAAUiB,SAAV,EAAuC;AAAA,MAAlBC,SAAkB,uEAAN,IAAM;;AACpD,MAAID,SAAS,CAACF,MAAV,IAAoB,CAAxB,EAA2B;AACzB;AACD;;AAED,MAAI,CAACG,SAAL,EAAgB;AACdD,IAAAA,SAAS,CAACd,OAAV,CAAkB,UAAAgB,SAAS,EAAI;AAC7BA,MAAAA,SAAS;AACV,KAFD;AAGA;AACD;;AAED,MAAMC,KAAK,GAAGC,QAAQ,CAACH,SAAD,EAAY,EAAZ,CAAtB;;AACA,MAAIE,KAAK,IAAI,CAAb,EAAgB;AACdH,IAAAA,SAAS,CAACd,OAAV,CAAkB,UAAAgB,SAAS,EAAI;AAC7BA,MAAAA,SAAS;AACV,KAFD;AAGA;AACD;;AAEDG,EAAAA,UAAU,CAAC,YAAM;AACfL,IAAAA,SAAS,CAACd,OAAV,CAAkB,UAAAgB,SAAS,EAAI;AAC7BA,MAAAA,SAAS;AACV,KAFD;AAGD,GAJS,EAIPC,KAJO,CAAV;AAKD;;AC9BD;AACA;AACA;AACA;AACA;AACA;AACA;AACe,sBAAUG,IAAV,EAAgBC,OAAhB,EAAkD;AAAA,MAAzBC,WAAyB,uEAAX,SAAW;AAC/D,SAAOC,QAAQ,CAAC,oCAAoCD,WAApC,GAAkD,MAAlD,GAA2DF,IAA3D,GAAkE,MAAnE,CAAR,GAAqFC,OAArF,CAAP,CAD+D;AAEhE;;ACTD;AACA;AACA;AACA;AACA;AACA;AACe,2BAAU5B,OAAV,EAAmBC,SAAnB,EAAoD;AAAA,MAAtBC,cAAsB,uEAAL,GAAK;AACjE,MAAI6B,KAAJ,EAAW5B,GAAX;AACAE,EAAAA,KAAK,CAACC,SAAN,CAAgBC,OAAhB,CAAwBC,IAAxB,CAA6BP,SAAS,CAACQ,KAAV,CAAgBP,cAAhB,CAA7B,EAA8D,UAAAQ,QAAQ,EAAI;AACxE;AACAA,IAAAA,QAAQ,GAAGA,QAAQ,CAACC,IAAT,EAAX,CAFwE;;AAKxE,YAAQD,QAAQ,CAAC,CAAD,CAAhB;AACE,WAAK,GAAL;AACE;AACAA,QAAAA,QAAQ,GAAGA,QAAQ,CAACE,SAAT,CAAmB,CAAnB,EAAsBC,OAAtB,CAA8B,GAA9B,EAAmC,GAAnC,CAAX,CAFF;;AAIEb,QAAAA,OAAO,CAACgC,eAAR,CAAwBtB,QAAxB;AACA;;AACF,WAAK,GAAL;AACE;AACAA,QAAAA,QAAQ,GAAGA,QAAQ,CAACE,SAAT,CAAmB,CAAnB,EAAsBC,OAAtB,CAA8B,GAA9B,EAAmC,GAAnC,CAAX,CAFF;;AAIE,YAAIb,OAAO,CAACe,SAAR,CAAkBC,QAAlB,CAA2BN,QAA3B,CAAJ,EAA0C;AACxCV,UAAAA,OAAO,CAACe,SAAR,CAAkBkB,MAAlB,CAAyBvB,QAAzB;AACD;;AACD;;AACF,WAAK,GAAL;AACE;AACAqB,QAAAA,KAAK,GAAGrB,QAAQ,CAACQ,OAAT,CAAiB,GAAjB,CAAR;;AACA,YAAIa,KAAK,GAAG,CAAZ,EAAe;AACbA,UAAAA,KAAK,GAAGrB,QAAQ,CAACS,MAAT,GAAkB,CAA1B;AACD;;AACDhB,QAAAA,GAAG,GAAGO,QAAQ,CAACE,SAAT,CAAmB,CAAnB,EAAsBmB,KAAtB,CAAN;AACA5B,QAAAA,GAAG,GAAGA,GAAG,CAACU,OAAJ,CAAY,GAAZ,EAAiB,GAAjB,CAAN,CAPF;;AAUEb,QAAAA,OAAO,CAACgC,eAAR,CAAwB7B,GAAxB;AACA;AA1BJ;AA4BD,GAjCD;AAkCD;;ACxCD;AACA;AACA;AACA;AACA;AACA;AACA;;AACe,8BAAU+B,MAAV,EAAkBlC,OAAlB,EAA2BmC,QAA3B,EAAqCC,aAArC,EAAoD;AACjE;AACA,MAAIpC,OAAO,CAACqC,YAAR,CAAqBH,MAAM,CAACI,QAAP,CAAgBC,eAAhB,GAAkC,SAAvD,MAAsE,OAA1E,EAAmF;AACjF;AACD,GAJgE;;;AAOjEvC,EAAAA,OAAO,CAACgC,eAAR,CAAwBI,aAAxB,EAPiE;;AAUjE,MAAII,UAAU,CAACC,MAAX,CAAkB,UAACC,SAAD;AAAA,WAAe1C,OAAO,CAAC2C,YAAR,CAAqBT,MAAM,CAACI,QAAP,CAAgBC,eAAhB,GAAkCG,SAAvD,CAAf;AAAA,GAAlB,EAAoGvB,MAApG,GAA6G,CAAjH,EAAoH;AAClH;AACD,GAZgE;;;AAejEnB,EAAAA,OAAO,CAACgC,eAAR,CAAwB,4BAAxB,EAfiE;;AAiBjEG,EAAAA,QAAQ,CAACS,SAAT,CAAmB5C,OAAnB;AACD;;AC3BD;AAOA;AACA;AACA;AACA;AACA;AACA;;AACe,6BAAUkC,MAAV,EAAkBW,OAAlB,EAA2BV,QAA3B,EAAqC;AAClDU,EAAAA,OAAO,CAACtC,OAAR,CAAgB,UAAAuC,KAAK,EAAI;;;AAMvB,2BAA8DZ,MAAM,CAACI,QAArE;AAAA,QAAQC,eAAR,oBAAQA,eAAR;AAAA,QAAyBQ,gBAAzB,oBAAyBA,gBAAzB;AAAA,QAA2C7C,cAA3C,oBAA2CA,cAA3C,CANuB;;AASvB,QAAMF,OAAO,GAAG8C,KAAK,CAACE,MAAtB,CATuB;;AAYvB,QAAMC,UAAU,GAAIjD,OAAO,CAACqC,YAAR,CAAqBE,eAAe,GAAG,gBAAvC,MAA6D,OAA9D,KAA2EO,KAAK,CAACI,cAApG;AACAlD,IAAAA,OAAO,CAACoB,YAAR,CAAqBmB,eAAe,GAAG,gBAAvC,EAAyDO,KAAK,CAACI,cAAN,CAAqBC,QAArB,EAAzD,EAbuB;;AAgBvB,QAAM9B,SAAS,GAAG,EAAlB;AACA,QAAIqB,SAAJ,EAAetC,KAAf,CAjBuB;;AAoBvBA,IAAAA,KAAK,GAAGJ,OAAO,CAACqC,YAAR,CAAqBE,eAArB,CAAR;;AACA,QAAInC,KAAK,IAAIA,KAAK,CAACe,MAAN,GAAe,CAA5B,EAA+B;AAC7B,UAAMQ,IAAI,GAAGvB,KAAb;AACAiB,MAAAA,SAAS,CAAC+B,IAAV,CAAe;AAAA,eAAMC,WAAW,CAAC1B,IAAD,EAAO;AAAEmB,UAAAA,KAAK,EAAEA;AAAT,SAAP,EAAyBC,gBAAzB,CAAjB;AAAA,OAAf;AACD;;AACD,QAAID,KAAK,CAACI,cAAV,EAA0B;AACxB;AACAR,MAAAA,SAAS,GAAGH,eAAe,GAAG,QAA9B;AACAnC,MAAAA,KAAK,GAAGJ,OAAO,CAACqC,YAAR,CAAqBK,SAArB,CAAR;;AACA,UAAItC,KAAJ,EAAW;AACT,YAAMuB,KAAI,GAAGvB,KAAb;AACAiB,QAAAA,SAAS,CAAC+B,IAAV,CAAe;AAAA,iBAAMC,WAAW,CAAC1B,KAAD,EAAO;AAAEmB,YAAAA,KAAK,EAAEA;AAAT,WAAP,EAAyBC,gBAAzB,CAAjB;AAAA,SAAf;AACAO,QAAAA,mBAAmB,CAACpB,MAAD,EAASlC,OAAT,EAAkBmC,QAAlB,EAA4BO,SAA5B,CAAnB;AACD,OARuB;;;AAUxBA,MAAAA,SAAS,GAAGH,eAAe,GAAG,YAA9B;AACAnC,MAAAA,KAAK,GAAGJ,OAAO,CAACqC,YAAR,CAAqBK,SAArB,CAAR;;AACA,UAAItC,KAAJ,EAAW;AACT,YAAMH,SAAS,GAAGG,KAAlB;AACAiB,QAAAA,SAAS,CAAC+B,IAAV,CAAe;AAAA,iBAAMG,aAAa,CAACvD,OAAD,EAAUC,SAAV,EAAqBC,cAArB,CAAnB;AAAA,SAAf;AACAoD,QAAAA,mBAAmB,CAACpB,MAAD,EAASlC,OAAT,EAAkBmC,QAAlB,EAA4BO,SAA5B,CAAnB;AACD,OAhBuB;;;AAkBxBA,MAAAA,SAAS,GAAGH,eAAe,GAAG,eAA9B;AACAnC,MAAAA,KAAK,GAAGJ,OAAO,CAACqC,YAAR,CAAqBK,SAArB,CAAR;;AACA,UAAItC,KAAJ,EAAW;AACT,YAAMH,UAAS,GAAGG,KAAlB;AACAiB,QAAAA,SAAS,CAAC+B,IAAV,CAAe;AAAA,iBAAMI,gBAAgB,CAACxD,OAAD,EAAUC,UAAV,EAAqBC,cAArB,CAAtB;AAAA,SAAf;AACAoD,QAAAA,mBAAmB,CAACpB,MAAD,EAASlC,OAAT,EAAkBmC,QAAlB,EAA4BO,SAA5B,CAAnB;AACD;AACF,KAlDsB;;;AAqDvBA,IAAAA,SAAS,GAAGH,eAAe,GAAG,eAA9B;AACAnC,IAAAA,KAAK,GAAGJ,OAAO,CAACqC,YAAR,CAAqBK,SAArB,CAAR;;AACA,QAAItC,KAAJ,EAAW;AACT,UAAI0C,KAAK,CAACI,cAAV,EAA0B;AACxB,YAAMjD,WAAS,GAAGG,KAAlB;AACAiB,QAAAA,SAAS,CAAC+B,IAAV,CAAe;AAAA,iBAAMG,aAAa,CAACvD,OAAD,EAAUC,WAAV,EAAqBC,cAArB,CAAnB;AAAA,SAAf;AACD,OAHD,MAGO,IAAI+C,UAAJ,EAAgB;AACrB,YAAMhD,WAAS,GAAGG,KAAlB;AACAiB,QAAAA,SAAS,CAAC+B,IAAV,CAAe;AAAA,iBAAMI,gBAAgB,CAACxD,OAAD,EAAUC,WAAV,EAAqBC,cAArB,CAAtB;AAAA,SAAf;AACD;AACF;;AAED,QAAI+C,UAAU,IAAI,CAACH,KAAK,CAACI,cAAzB,EAAyC;AACvC;AACAR,MAAAA,SAAS,GAAGH,eAAe,GAAG,OAA9B;AACAnC,MAAAA,KAAK,GAAGJ,OAAO,CAACqC,YAAR,CAAqBK,SAArB,CAAR;;AACA,UAAItC,KAAJ,EAAW;AACT,YAAMuB,MAAI,GAAGvB,KAAb;AACAiB,QAAAA,SAAS,CAAC+B,IAAV,CAAe;AAAA,iBAAMC,WAAW,CAAC1B,MAAD,EAAO;AAAEmB,YAAAA,KAAK,EAAEA;AAAT,WAAP,EAAyBC,gBAAzB,CAAjB;AAAA,SAAf;AACAO,QAAAA,mBAAmB,CAACpB,MAAD,EAASlC,OAAT,EAAkBmC,QAAlB,EAA4BO,SAA5B,CAAnB;AACD,OARsC;;;AAUvCA,MAAAA,SAAS,GAAGH,eAAe,GAAG,WAA9B;AACAnC,MAAAA,KAAK,GAAGJ,OAAO,CAACqC,YAAR,CAAqBK,SAArB,CAAR;;AACA,UAAItC,KAAJ,EAAW;AACT,YAAMH,WAAS,GAAGG,KAAlB;AACAiB,QAAAA,SAAS,CAAC+B,IAAV,CAAe;AAAA,iBAAMG,aAAa,CAACvD,OAAD,EAAUC,WAAV,EAAqBC,cAArB,CAAnB;AAAA,SAAf;AACAoD,QAAAA,mBAAmB,CAACpB,MAAD,EAASlC,OAAT,EAAkBmC,QAAlB,EAA4BO,SAA5B,CAAnB;AACD,OAhBsC;;;AAkBvCA,MAAAA,SAAS,GAAGH,eAAe,GAAG,cAA9B;AACAnC,MAAAA,KAAK,GAAGJ,OAAO,CAACqC,YAAR,CAAqBK,SAArB,CAAR;;AACA,UAAItC,KAAJ,EAAW;AACT,YAAMH,WAAS,GAAGG,KAAlB;AACAiB,QAAAA,SAAS,CAAC+B,IAAV,CAAe;AAAA,iBAAMI,gBAAgB,CAACxD,OAAD,EAAUC,WAAV,EAAqBC,cAArB,CAAtB;AAAA,SAAf;AACAoD,QAAAA,mBAAmB,CAACpB,MAAD,EAASlC,OAAT,EAAkBmC,QAAlB,EAA4BO,SAA5B,CAAnB;AACD;AACF,KA1FsB;;;AA6FvBA,IAAAA,SAAS,GAAGH,eAAe,GAAG,cAA9B;AACAnC,IAAAA,KAAK,GAAGJ,OAAO,CAACqC,YAAR,CAAqBK,SAArB,CAAR;;AACA,QAAItC,KAAJ,EAAW;AACT,UAAI0C,KAAK,CAACI,cAAV,EAA0B;AACxB,YAAMjD,WAAS,GAAGG,KAAlB;AACAiB,QAAAA,SAAS,CAAC+B,IAAV,CAAe;AAAA,iBAAMI,gBAAgB,CAACxD,OAAD,EAAUC,WAAV,EAAqBC,cAArB,CAAtB;AAAA,SAAf;AACD,OAHD,MAGO,IAAI+C,UAAJ,EAAgB;AACrB,YAAMhD,WAAS,GAAGG,KAAlB;AACAiB,QAAAA,SAAS,CAAC+B,IAAV,CAAe;AAAA,iBAAMG,aAAa,CAACvD,OAAD,EAAUC,WAAV,EAAqBC,cAArB,CAAnB;AAAA,SAAf;AACD;AACF,KAvGsB;;;AA0GvBuD,IAAAA,eAAe,CAACpC,SAAD,EAAYrB,OAAO,CAACqC,YAAR,CAAqBE,eAAe,GAAG,QAAvC,CAAZ,CAAf;;AAEA,QAAI,OAAQmB,MAAM,CAACC,WAAf,KAAgC,UAApC,EAAgD;AAC9C;AACA3D,MAAAA,OAAO,CAAC4D,aAAR,CAAsB,IAAID,WAAJ,CAAgB,eAAhB,EAAiC;AAAEE,QAAAA,MAAM,EAAE;AAAEf,UAAAA,KAAK,EAAEA;AAAT;AAAV,OAAjC,CAAtB;AACD;AACF,GAhHD;AAiHD;;AC1HD,IAAMgB,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAE,UADS;AAEnBC,EAAAA,WAAW,EAAE,aAFM;AAGnBC,EAAAA,KAAK,EAAE;AAHY,CAArB;;IAMMC;AACJ;AACF;AACA;AACA;AACA;AACE,kBAAYC,OAAZ,EAAqB;AAAA;;AAAA;;AACnB,SAAKC,YAAL,GAAoB,KAApB,CADmB;;AAInB,SAAK9B,QAAL,GAAgB;AACd+B,MAAAA,KAAK,EAAE,KADO;AAEdC,MAAAA,UAAU,EAAER,YAAY,CAACC,QAFX;AAIdQ,MAAAA,eAAe,EAAEC,QAAQ,CAACC,IAJZ;AAKdC,MAAAA,eAAe,EAAE,IALH;AAMdC,MAAAA,cAAc,EAAE,KANF;AAQdpC,MAAAA,eAAe,EAAE,aARH;AASdQ,MAAAA,gBAAgB,EAAE,QATJ;AAUd6B,MAAAA,sBAAsB,EAAE;AAVV,KAAhB,CAJmB;;AAiBnB,QAAIT,OAAO,IAAIA,OAAO,KAAK,EAA3B,EAA+B;AAC7B,WAAK7B,QAAL,GAAgBuC,MAAM,CAACC,MAAP,CAAc,KAAKxC,QAAnB,EAA6B6B,OAA7B,CAAhB,CAD6B;AAO9B,KAxBkB;;;AA2BnB,QAAI,KAAK7B,QAAL,CAAcgC,UAAd,KAA6BR,YAAY,CAACE,WAA9C,EAA2D;AACzD,UAAIQ,QAAQ,CAACF,UAAT,KAAwB,aAAxB,IAAyCE,QAAQ,CAACF,UAAT,KAAwB,UAArE,EAAiF;AAC/E;AACA,aAAKS,UAAL;AACD,OAHD,MAGO;AACL;AACAP,QAAAA,QAAQ,CAACQ,gBAAT,CAA0B,kBAA1B,EAA8C,YAAM;AAClD,UAAA,KAAI,CAACD,UAAL;AACD,SAFD;AAGD;AACF,KAVD,MAUO,IAAI,KAAKzC,QAAL,CAAcgC,UAAd,KAA6BR,YAAY,CAACC,QAA9C,EAAwD;AAC7D,UAAIS,QAAQ,CAACF,UAAT,KAAwB,UAA5B,EAAwC;AACtC;AACA,aAAKS,UAAL;AACD,OAHD,MAGO;AACL;AACArB,QAAAA,MAAM,CAACsB,gBAAP,CAAwB,MAAxB,EAAgC,YAAM;AACpC,UAAA,KAAI,CAACD,UAAL;AACD,SAFD;AAGD;AACF;AACF;AAED;AACF;AACA;AACA;;;;;WACE,sBAAc;AACZ,aAAOF,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,KAAKxC,QAAvB,CAAP;AACD;AAED;AACF;AACA;AACA;;;;WACE,yBAAiB;AACf,aAAO,KAAK8B,YAAZ;AACD;AAED;AACF;AACA;;;;WACE,sBAAc;AAAA;;AACZ;AACA,UAAI,KAAKA,YAAT,EAAuB;;AAKrB;AACD;;AACD,WAAKA,YAAL,GAAoB,IAApB,CATY;;AAYZ,UAAMa,eAAe,GAAGJ,MAAM,CAACC,MAAP,CAAc;AACpCI,QAAAA,SAAS,EAAE;AADyB,OAAd,EAErB;AACDC,QAAAA,IAAI,EAAE,KAAK7C,QAAL,CAAcoC,eADnB;AAEDU,QAAAA,UAAU,EAAE,KAAK9C,QAAL,CAAcqC;AAFzB,OAFqB,CAAxB,CAZY;;AAoBZ,WAAKU,SAAL,GAAiB,IAAIC,oBAAJ,CAAyB,UAACC,QAAD,EAAWF,SAAX,EAAyB;AACjEG,QAAAA,kBAAkB,CAAC,MAAD,EAAOD,QAAP,EAAiBF,SAAjB,CAAlB;AACD,OAFgB,EAEdJ,eAFc,CAAjB,CApBY;;AAyBZ,WAAKQ,aAAL;AAKD;AAED;AACF;AACA;;;;WACE,mBAAW;AACT;AACA,UAAI,KAAKJ,SAAT,EAAoB;AAClB,aAAKA,SAAL,CAAeK,UAAf;AACD;;AACD,WAAKL,SAAL,GAAiB,IAAjB,CALS;;AAQT,WAAKjB,YAAL,GAAoB,KAApB,CARS;;AAWT,WAAK9B,QAAL,GAAgB,IAAhB;AACD;AAED;AACF;AACA;;;;WACE,yBAAiB;AAAA;;AACf;AACA,UAAMqD,gBAAgB,GAAG,KAAKN,SAAL,CAAeO,WAAf,GAA6BC,GAA7B,CAAiC,UAAC/C,KAAD,EAAW;AACnE,eAAOA,KAAK,CAACE,MAAb;AACD,OAFwB,CAAzB,CAFe;;;AAMf,UAAM8C,OAAO,GAAGtD,UAAU,CAACqD,GAAX,CAAe,UAACnD,SAAD,EAAe;AAC5C,eAAO,MAAM,MAAI,CAACJ,QAAL,CAAcC,eAApB,GAAsCG,SAAtC,GAAkD,GAAzD;AACD,OAFe,CAAhB;;AAGA,UAAMqD,QAAQ,GAAG,KAAKzD,QAAL,CAAciC,eAAd,CAA8ByB,gBAA9B,CAA+CF,OAAO,CAACG,IAAR,CAAa,GAAb,CAA/C,CAAjB,CATe;;;AAYf,UAAIN,gBAAgB,CAACxE,MAAjB,GAA0B,CAA9B,EAAiC;AAC/B;AACAd,QAAAA,KAAK,CAACC,SAAN,CAAgBC,OAAhB,CAAwBC,IAAxB,CAA6BuF,QAA7B,EAAuC,UAAC/F,OAAD,EAAa;AAClD;AACA,cAAI2F,gBAAgB,CAACzE,OAAjB,CAAyBlB,OAAzB,KAAqC,CAAzC,EAA4C;AAC1C;AACD,WAJiD;;;AAOlD,UAAA,MAAI,CAACqF,SAAL,CAAea,OAAf,CAAuBlG,OAAvB;AACD,SARD;AASD,OAXD,MAWO;AACL;AACAK,QAAAA,KAAK,CAACC,SAAN,CAAgBC,OAAhB,CAAwBC,IAAxB,CAA6BuF,QAA7B,EAAuC,UAAC/F,OAAD,EAAa;AAClD,UAAA,MAAI,CAACqF,SAAL,CAAea,OAAf,CAAuBlG,OAAvB;AACD,SAFD;AAGD;AAKF;;;;;;;AAIHkE,MAAM,CAACJ,YAAP,GAAsBA,YAAtB;AACAI,MAAM,CAACiC,OAAP,GAAiB,OAAjB;;;;"}